<?php
/**
 * DiggBar Blocker Plugin
 *
 * Inspired by http://daringfireball.net/2009/04/how_to_block_the_diggbar
 **/

class DiggbarBlocker extends Plugin
{
	/**
	 * Add update beacon support
	 **/
	public function action_update_check()
	{
	 	Update::add( 'DiggbarBlocker', '737c4ad6-0de4-4f7c-950c-1d4f70303139', $this->info->version );
	}

	/**
	 * Add help text to plugin configuration page
	 **/
	public function help()
	{
		$help = _t( "This plugin prevents DiggBar from framing your site. Install and configure it."
		);
		return $help;
	}

	/**
	 * Add actions to the plugin page for this plugin
	 * @param array $actions An array of actions that apply to this plugin
	 * @param string $plugin_id The string id of a plugin, generated by the system
	 * @return array The array of actions to attach to the specified $plugin_id
	 **/
	public function filter_plugin_config( $actions, $plugin_id )
	{
		if ( $plugin_id == $this->plugin_id() ) {
			$actions[] = 'Configure';
		}
		return $actions;
	}

	/**
	 * Respond to the user selecting an action on the plugin page
	 * @param string $plugin_id The string id of the acted-upon plugin
	 * @param string $action The action string supplied via the filter_plugin_config hook
	 **/
	public function action_plugin_ui( $plugin_id, $action )
	{
		if ( $plugin_id == $this->plugin_id() ) {
			
			if ( $action == _t( 'Configure' ) ) {

				$ui = new FormUI( strtolower( get_class( $this ) ) );

				$reload_fieldset = $ui->append( 'fieldset', 'reload', _t( 'No Message' ) );
					
				$reload_page = $reload_fieldset->append( 'checkbox', 'reload', 'option:diggbarblocker__reload', 
					_t( 'Instead of displaying a message, reload the page without the bar' ) );

				$message_fieldset = $ui->append( 'fieldset', 'message_settings', _t( 'Message Settings' ) );
				$message = $message_fieldset->append( 'textarea', 'message', 'option:diggbarblocker__message', 
					_t( 'If the box above is not checked, display this to Diggbar-using visitors:' ) );
				$message->rows = 2;
				$message->class[] = 'resizable';

				$link = $message_fieldset->append( 'checkbox', 'addlink', 'option:diggbarblocker__addlink',
					_t( 'Add a link to the target page.' ) );

				$ui->append( 'submit', 'save', _t( 'Save' ) );
				$ui->out();
			}
		}
	}

	/**
	 * Set default text & link behavior
	 **/
	public function action_plugin_activation( $file )
	{
		if ( Plugins::id_from_file($file) == Plugins::id_from_file(__FILE__) ) {
			if ( Options::get( 'diggbarblocker__message' ) == null ) {
				Options::set( 'diggbarblocker__message', _t( 'This site does not support use of the DiggBar.' ) );
			}
			if ( Options::get( 'diggbarblocker__add_link' ) == null ) {
				Options::set( 'diggbarblocker__addlink', 1 ); 
			}
		}
	}

	/**
	 * Return either a message for the Diggbar user, or just reload the page.
	 * @return string buffer of either the message displayed, or reload headers.
	 **/
	public function filter_final_output( $buffer )
	{
		if ( preg_match( '#http://digg.com/\w{1,8}/*(\?.*)?$#', $_SERVER[ 'HTTP_REFERER' ]) ) {
			if ( Options::get( 'diggbarblocker__reload' ) ) {
				$buffer = '<SCRIPT TYPE="text/JavaScript">
	if (window != top) { 
		top.location.replace( self.location.href );
	}
</SCRIPT>';
			} else
			{	
				$buffer = '<p>' . Options::get( 'diggbarblocker__message' ) .'</p>' . 
					( Options::get( 'diggbarblocker__addlink' ) ? 
					_t( '<p>Open <a title="Open in a new window" target="_top" href="') . $_SERVER[ 'SCRIPT_URI' ] . '">' .
					$_SERVER[ 'SCRIPT_URI' ] . _t('</a> in a new tab or window to view it.</p>') : '');
			}	
		}
		return $buffer;
	}
}

?>
